import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';

class InfoScreen extends StatelessWidget {
  const InfoScreen({super.key});

  Future<void> _launchUrl(String url) async {
    final uri = Uri.parse(url);
    try {
      await launchUrl(uri, mode: LaunchMode.externalApplication);
    } catch (e) {
      debugPrint('Could not launch $url: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('V·ªÅ h·ªá t·ªça ƒë·ªô'),
        elevation: 0,
        backgroundColor: Colors.grey[900],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Header
            const Icon(Icons.info_outline, size: 64, color: Colors.blue),
            const SizedBox(height: 16),
            Text(
              'T·∫°i sao c·∫ßn chuy·ªÉn ƒë·ªïi t·ªça ƒë·ªô?',
              style: Theme.of(context).textTheme.headlineSmall?.copyWith(
                fontWeight: FontWeight.bold,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 24),

            // WGS84 section
            _buildSection(
              context,
              title: 'üåç WGS84 (World Geodetic System 1984)',
              content: '''
‚Ä¢ H·ªá t·ªça ƒë·ªô ƒë·ªãa l√Ω to√†n c·∫ßu ƒë∆∞·ª£c s·ª≠ d·ª•ng r·ªông r√£i tr√™n th·∫ø gi·ªõi
‚Ä¢ ƒê∆∞·ª£c GPS v√† c√°c ·ª©ng d·ª•ng b·∫£n ƒë·ªì nh∆∞ Google Maps s·ª≠ d·ª•ng
‚Ä¢ Bi·ªÉu di·ªÖn b·∫±ng kinh ƒë·ªô (Longitude) v√† vƒ© ƒë·ªô (Latitude)
‚Ä¢ ƒê∆°n v·ªã: ƒë·ªô th·∫≠p ph√¢n (decimal degrees)
‚Ä¢ V√≠ d·ª•: 10.7591¬∞N, 106.6752¬∞E (TP.HCM)

∆Øu ƒëi·ªÉm:
‚úì Ti√™u chu·∫©n qu·ªëc t·∫ø
‚úì T∆∞∆°ng th√≠ch v·ªõi GPS
‚úì D·ªÖ chia s·∫ª v√† s·ª≠ d·ª•ng tr√™n internet''',
            ),

            const SizedBox(height: 24),

            // VN-2000 section
            _buildSection(
              context,
              title: 'üáªüá≥ VN-2000 (H·ªá t·ªça ƒë·ªô qu·ªëc gia Vi·ªát Nam 2000)',
              content: '''
‚Ä¢ H·ªá t·ªça ƒë·ªô ph·∫≥ng ch√≠nh th·ª©c c·ªßa Vi·ªát Nam t·ª´ nƒÉm 2000
‚Ä¢ ƒê∆∞·ª£c thi·∫øt k·∫ø ri√™ng cho l√£nh th·ªï Vi·ªát Nam
‚Ä¢ Bi·ªÉu di·ªÖn b·∫±ng t·ªça ƒë·ªô ƒê√¥ng (X) v√† t·ªça ƒë·ªô B·∫Øc (Y)
‚Ä¢ ƒê∆°n v·ªã: m√©t (meters)
‚Ä¢ V√≠ d·ª•: X=600997m, Y=1189964m (TP.HCM)

∆Øu ƒëi·ªÉm cho Vi·ªát Nam:
‚úì ƒê·ªô ch√≠nh x√°c cao trong ph·∫°m vi l√£nh th·ªï VN
‚úì Thu·∫≠n ti·ªán cho ƒëo ƒë·∫°c, x√¢y d·ª±ng
‚úì Ti√™u chu·∫©n ch√≠nh th·ª©c trong c√°c d·ª± √°n nh√† n∆∞·ªõc
‚úì Ph√π h·ª£p v·ªõi ƒë·ªãa h√¨nh v√† v·ªã tr√≠ ƒë·ªãa l√Ω Vi·ªát Nam''',
            ),

            const SizedBox(height: 24),

            // Why VN-2000 section
            _buildSection(
              context,
              title: 'üéØ T·∫°i sao Vi·ªát Nam c·∫ßn VN-2000?',
              content: '''
Tr∆∞·ªõc nƒÉm 2000, Vi·ªát Nam s·ª≠ d·ª•ng nhi·ªÅu h·ªá t·ªça ƒë·ªô kh√°c nhau:
‚Ä¢ Mi·ªÅn B·∫Øc: H·ªá t·ªça ƒë·ªô H√† N·ªôi 1972
‚Ä¢ Mi·ªÅn Nam: H·ªá t·ªça ƒë·ªô Indian 1960
‚Ä¢ G√¢y kh√≥ khƒÉn trong qu·∫£n l√Ω v√† k·∫øt n·ªëi d·ªØ li·ªáu ƒë·ªãa l√Ω

VN-2000 ƒë∆∞·ª£c thi·∫øt l·∫≠p ƒë·ªÉ:
‚úì Th·ªëng nh·∫•t h·ªá t·ªça ƒë·ªô tr√™n to√†n qu·ªëc
‚úì N√¢ng cao ƒë·ªô ch√≠nh x√°c ƒëo ƒë·∫°c
‚úì Ph·ª•c v·ª• ph√°t tri·ªÉn kinh t·∫ø-x√£ h·ªôi
‚úì ƒê√°p ·ª©ng y√™u c·∫ßu h·ªôi nh·∫≠p qu·ªëc t·∫ø
‚úì H·ªó tr·ª£ qu·∫£n l√Ω ƒë·∫•t ƒëai, quy ho·∫°ch ƒë√¥ th·ªã''',
            ),

            const SizedBox(height: 24),

            // When to use section
            _buildSection(
              context,
              title: 'üîÑ Khi n√†o c·∫ßn chuy·ªÉn ƒë·ªïi?',
              content: '''
Chuy·ªÉn t·ª´ VN-2000 sang WGS84 khi:
‚Ä¢ Mu·ªën xem v·ªã tr√≠ tr√™n Google Maps
‚Ä¢ Chia s·∫ª t·ªça ƒë·ªô qua GPS, ƒëi·ªán tho·∫°i
‚Ä¢ S·ª≠ d·ª•ng v·ªõi c√°c ·ª©ng d·ª•ng b·∫£n ƒë·ªì qu·ªëc t·∫ø
‚Ä¢ T√≠ch h·ª£p v·ªõi h·ªá th·ªëng ƒë·ªãnh v·ªã to√†n c·∫ßu

Chuy·ªÉn t·ª´ WGS84 sang VN-2000 khi:
‚Ä¢ L√†m vi·ªác v·ªõi b·∫£n ƒë·ªì ƒë·ªãa ch√≠nh Vi·ªát Nam
‚Ä¢ Th·ª±c hi·ªán d·ª± √°n x√¢y d·ª±ng, ƒëo ƒë·∫°c
‚Ä¢ B√°o c√°o cho c∆° quan nh√† n∆∞·ªõc
‚Ä¢ S·ª≠ d·ª•ng trong c√°c ph·∫ßn m·ªÅm GIS c·ªßa Vi·ªát Nam''',
            ),

            const SizedBox(height: 24),

            // Legal basis section
            _buildSection(
              context,
              title: 'üìã C∆° s·ªü ph√°p l√Ω',
              content: '''
Vi·ªác s·ª≠ d·ª•ng h·ªá t·ªça ƒë·ªô VN-2000 ƒë∆∞·ª£c quy ƒë·ªãnh trong:

‚Ä¢ Ngh·ªã quy·∫øt s·ªë 48/2000/Qƒê-TTg ng√†y 21/4/2000
‚Ä¢ Quy ƒë·ªãnh vi·ªác √°p d·ª•ng h·ªá t·ªça ƒë·ªô qu·ªëc gia VN-2000
‚Ä¢ Thay th·∫ø c√°c h·ªá t·ªça ƒë·ªô c≈© tr√™n to√†n qu·ªëc

Xem chi ti·∫øt t·∫°i vƒÉn b·∫£n ch√≠nh th·ª©c:''',
            ),

            const SizedBox(height: 16),

            // Official document link
            Container(
              width: double.infinity,
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.blue[900]?.withOpacity(0.3),
                borderRadius: BorderRadius.circular(12),
                border: Border.all(color: Colors.blue[700]!),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  const Text(
                    'üìÑ VƒÉn b·∫£n ch√≠nh th·ª©c',
                    style: TextStyle(
                      fontWeight: FontWeight.bold,
                      color: Colors.blue,
                      fontSize: 16,
                    ),
                  ),
                  const SizedBox(height: 8),
                  const Text(
                    'Ngh·ªã quy·∫øt s·ªë 48/2000/Qƒê-TTg\nV·ªÅ vi·ªác √°p d·ª•ng h·ªá t·ªça ƒë·ªô qu·ªëc gia VN-2000',
                    style: TextStyle(color: Colors.white70),
                  ),
                  const SizedBox(height: 12),
                  ElevatedButton.icon(
                    onPressed: () => _launchUrl(
                      'https://chinhphu.vn/default.aspx?docid=21337&pageid=27160',
                    ),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.blue[700],
                      foregroundColor: Colors.white,
                    ),
                    icon: const Icon(Icons.open_in_browser),
                    label: const Text('Xem vƒÉn b·∫£n g·ªëc'),
                  ),
                ],
              ),
            ),

            const SizedBox(height: 24),

            // Usage note
            Container(
              width: double.infinity,
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.green[900]?.withOpacity(0.3),
                borderRadius: BorderRadius.circular(12),
                border: Border.all(color: Colors.green[700]!),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Row(
                    children: [
                      Icon(Icons.lightbulb, color: Colors.green[400]),
                      const SizedBox(width: 8),
                      const Text(
                        'L∆∞u √Ω s·ª≠ d·ª•ng',
                        style: TextStyle(
                          fontWeight: FontWeight.bold,
                          color: Colors.green,
                          fontSize: 16,
                        ),
                      ),
                    ],
                  ),
                  const SizedBox(height: 8),
                  const Text(
                    '‚Ä¢ Ch·ªçn ƒë√∫ng m√∫i chi·∫øu (zone) theo v√πng ƒë·ªãa l√Ω\n'
                    '‚Ä¢ TP.HCM v√† mi·ªÅn Nam: VN2000_TP_HCM\n'
                    '‚Ä¢ H√† N·ªôi v√† mi·ªÅn B·∫Øc: VN2000_HA_NOI\n'
                    '‚Ä¢ Ki·ªÉm tra k·∫øt qu·∫£ tr√™n b·∫£n ƒë·ªì sau khi chuy·ªÉn ƒë·ªïi',
                    style: TextStyle(color: Colors.white70),
                  ),
                ],
              ),
            ),

            const SizedBox(height: 32),
          ],
        ),
      ),
    );
  }

  Widget _buildSection(
    BuildContext context, {
    required String title,
    required String content,
  }) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey[800]?.withOpacity(0.5),
        borderRadius: BorderRadius.circular(12),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: const TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.bold,
              color: Colors.white,
            ),
          ),
          const SizedBox(height: 12),
          Text(
            content,
            style: const TextStyle(
              fontSize: 14,
              color: Colors.white70,
              height: 1.5,
            ),
          ),
        ],
      ),
    );
  }
}
